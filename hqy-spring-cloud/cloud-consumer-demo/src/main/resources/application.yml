server:
  port: 8002
spring:
  application:
    name: cloud-consumer-demo
  cloud:
    stream:
      binders:
        defaultRabbit:
          type: rabbit
      bindings:
        input:
          destination: messageExchange  #表示要使用的Exchange名称定义
          content-type: application/json #设置消息类型，本次为json，文本则设置“text/plain”
          binder: defaultRabbit
          group: consumer8002 # 分组，可以解决消息重复消费的情况，同一组属于竞争关系，消息只能被组内的订阅者中 其中一员消费
eureka:
  client:
    register-with-eureka: true #表示是否将自己注册进EurekaServer默认为true。
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetchRegistry: true
    service-url:
      defaultZone: http://localhost:10010/eureka
  instance:
    #实例id名称
    instance-id: consumer-demo-8002
    #访问路径可以显示IP地址
    prefer-ip-address: true
feign:
  hystrix:
    enabled: true #feign开启hystrix降级
ribbon: #设置feign客户端超时时间(OpenFeign默认支持ribbon)
  ReadTimeout: 5000 #指的是建立连接所用的时间，适用于网络状况正常的情况下,两端连接所用的时间
  #指的是建立连接后从服务器读取到可用资源所用的时间
  ConnectTimeout: 5000
logging:
  level:
    # feign日志以什么级别监控哪个接口
    com.hqy.cloud.service.PaymentFeignService: debug
management:
  endpoints:
    web:
      exposure:
        include: "*"