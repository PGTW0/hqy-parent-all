def registry = "registry.cn-shenzhen.aliyuncs.com"
def image_name = "${registry}/hqy-parent-all/collector-service:1.0-dev"
def jnlp_image = "registry.cn-shenzhen.aliyuncs.com/hqy-parent-all/jnlp-slave:latest"

def k8s_auth = "kubeconfig"
def aliyun_hub_auth = "aliyun_mirror_server"
def aliyun_registry_secret = "aliyun-hub-secret"


def serverPort = "8888"
def base_dir = "/home/jenkins/agent/workspace/common-collector-service_dev"


podTemplate(
    label: 'jenkins-agent',
    cloud: 'kubernetes',
    containers: [
        containerTemplate(name: 'jnlp', image: "${jnlp_image}",  alwaysPullImage: true),
        containerTemplate(name: 'docker', image: 'docker.io/docker:latest', ttyEnabled: true, command: 'cat')
    ],
    volumes: [
        hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock'),
        hostPathVolume(mountPath: '/usr/local/apache-maven-3.8.6/repo', hostPath: '/usr/local/apache-maven-3.8.6/repo')
    ]) {

    node('jenkins-agent'){
         stage('Git Clone') {
              checkout([
              $class: 'GitSCM',
              branches: [[name: '*/dev']],
              userRemoteConfigs: [[credentialsId: "", url: "https://github.com/nauyiq/hqy-parent-all.git"]],
              extensions: [
              [$class: 'CloneOption', depth: 1, noTags: false, reference: '', shallow: true]
              ]
              ])
         }

         stage('Maven Build') {
            sh """
                cd ${base_dir}/hqy-common-modules/hqy-common-collector-impl/
                ls
                mvn clean compile install -Dmaven.test.skip=true
            """
         }

        stage('Build Image') {
//             container('docker') {
                stage('Package Image') {
                   withCredentials([usernamePassword(credentialsId: "${aliyun_hub_auth}", passwordVariable: 'password', usernameVariable: 'username')]) {
                   sh """
                      cd ${base_dir}/hqy-common-modules/hqy-common-collector-impl/deploy
                      docker build -t ${image_name} .
                      docker login -u ${username} -p '${password}' ${registry}
                      docker push ${image_name}
                   """
                    }
                }
//             }
        }

        stage('部署到K8s'){
            sh """
                sed -i 's#\$IMAGE_NAME#${image_name}#' ${base_dir}/hqy-common-modules/hqy-common-collector-impl/deploy/deployment.yaml
                sed -i 's#\$SECRET_NAME#${aliyun_registry_secret}#' ${base_dir}/hqy-common-modules/hqy-common-collector-impl/deploy/deployment.yaml
                sed -i 's#\$SERVICE_PORT#${serverPort}#' ${base_dir}/hqy-common-modules/hqy-common-collector-impl/deploy/deployment.yaml

            """
             kubernetesDeploy configs: '${base_dir}/hqy-common-modules/hqy-common-collector-impl/deploy/deployment.yaml', kubeconfigId: "${k8s_auth}"
        }
    }
}
